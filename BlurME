#!/bin/bash
# Fade Branch
# ~ This script of BlurME is for fade transitions
# BlurME is dedicated to You!
wp_blur="$PWD///output.png"
get_ws () {
while read -r ws status _; do
    case $status in
        '*') printf '%s\n' "$ws"
    esac
done <<EOF
$(wmctrl -d)
EOF
}

get_wids () {
    current="$(get_ws)"
    while read -r wid ws _; do
        case $ws in
            "$current") printf '%s' "$wid"
        esac
    done <<EOF
$(wmctrl -l)
EOF
}
KDEB() {
    dbus-send --session --dest=org.kde.plasmashell --type=method_call /PlasmaShell org.kde.PlasmaShell.evaluateScript 'string:var Desktops = desktops();for (i=0;i<Desktops.length;i++) {d = Desktops[i];d.wallpaperPlugin = "org.kde.image";d.currentConfigGroup = Array("Wallpaper","org.kde.image","General");d.writeConfig("Image", "file:///'"$wp_blur"'");}'
}
KDEW() {
    dbus-send --session --dest=org.kde.plasmashell --type=method_call /PlasmaShell org.kde.PlasmaShell.evaluateScript 'string:var Desktops = desktops();for (i=0;i<Desktops.length;i++) {d = Desktops[i];d.wallpaperPlugin = "org.kde.image";d.currentConfigGroup = Array("Wallpaper","org.kde.image","General");d.writeConfig("Image", "file://'"$wp"'");}'
}

WPO() {
    KDEW
    set-wallpaper --fade-secs 1 --image "$wp"
}
usage () {
cat << EOF
${0##*/}: Blurs the wallpaper!
usage: ${0##*/} [-h|-b|-w|-c]
-w/--windows: Max window value
-b/--blur: Set blur strength
-c/--wallpaper: Sets wallpaper location
-h/--help: That print's this silly
EOF
}
root() {

trap 'echo "SIGINT caught!"; WPO; exit 1' INT TERM
while sleep 1
do
get_ws
wids="$(get_wids)"
wids=${#wids}
wids="$((wids / 10))"
echo "$wp_blur"
echo 'Bluring with scale of '"$blur"
if [ -z "$wp" ]; then
    echo "No wallpaper set"
    echo "Use '-c'"
    exit 1
else
    echo 'Wallpaper is '"$wp"
fi
if [ -n "$output" ]; then
    echo 'saving to '"$output"
    wp_blur="$output///output.png"
else
    wp_blur="$PWD///output.png"
    output="$PWD"
fi

echo 'Blurring with scale of '"$blur"
if [ "$blur" -ge "2" ]; then
    printf 'Blurring, image with scale of %b\n' "$blur"
    if ! ls "$wp_blur"; then
	    convert "$wp" -blur 0x"$blur" "$output"/output.png
	    printf 'Blurred!\n'
    else
	    printf 'Blurred image found, skipping\n'
    fi
else
    echo "'-b' not used!?"
    printf 'Segmeant Fault\n'
    exit 1
fi

if [ "$XDG_CURRENT_DESKTOP" = "KDE" ]; then
    printf "%b Windows/Widgets Are Open" "$wids"
    if [ -n "$wid" ]; then
        printf 'Widget Amount is %b\n' "$wid"
    else
        wid="2"
    fi
if [ "$wids" -le "$wid" ]; then
    echo "Setting Non-Blurred Wallpaper"
    KDEW
else
    if [ "$wids" = "1" ]; then
        echo "Setting Non-Blurred Wallpaper"
        KDEW
    else
      echo "Blurring"
      echo "$PWD"
      echo "$wp_blur"
      KDEB
    fi
  fi
else
	if [ "$DESKTOP_SESSION" = "/usr/share/xsessions/plasma" ]; then
		if [ -n "$wid" ]; then
			echo "Widget Amount is $wid"
		else
 			wid="2"
    		fi
    		if [ "$wids" -le "$wid" ]; then
      			echo "Setting Non-Blurred Wallpaper"
      			KDEW
    		else
      			if [ "$wids" = "1" ]; then
        				echo "Setting Non-Blurred Wallpaper"
        				KDEW
      			else
        				prtinf "Blurring\n"
        				KDEB
        				printf "Blurred\n"
      			fi
    	fi
else
    while sleep 1
    do
	get_ws
	wids="$(get_wids)"
	wids=${#wids}
	wids="$((wids / 10))"
	if [ "$wids" -le "$wid" ]; then
		echo "$wids Windows are open"
                	echo "Max number of windows is $wid"
		if [ "$type" != "un-blur" ]; then
			set-wallpaper --fade-secs 1 --image "$wp"
			echo "Setting non-blurred wallpaper"
		else
			printf 'Waiting\n' && sleep 1
		fi
		type="un-blur"
        	else
                	echo "Max window number is $wid"
                	echo "current is $wids"
		if [ "$type" != "blur" ]; then
			set-wallpaper --fade-secs 1 --image "$wp_blur"
			echo "Bluring"
		else
			printf 'Waiting\n' && sleep 1
		fi
		type="blur"
         	fi
    done
  fi
fi
done
}
main () {
while [ "$1" ]; do
    case $1 in
        -h|--help)
            usage && exit 1
            ;;
        -b|--blur)
            blur=$2
            shift 1
            ;;
        -w|--windows)
            wid=$2
            shift 1
            ;;
        -c|--wallpaper)
            wp=$2
            shift 1
            ;;
        *)
            usage && exit 1
            ;;
    esac
    shift 1
done
}
main "$@"
root
